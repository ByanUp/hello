""" 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31    32         3    5    32        3    5    8    3
37    43         2    4    6         8    3    7    1
51    86        -1   64   -8
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде. Далее реализовать
перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
 Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с
первым элементом первой строки второй матрицы и т.д. """


class Matrix:
    def __init__(self, *args):
        self.my_list = list(args)

    def __str__(self):
        result = '\n'.join(map(str, self.my_list))
        '''result -> [1, 2, 3]
                     [4, 5, 6]
                     [7, 8, 9]'''
        result = result.replace(',', '').replace('[', '').replace(']', '')
        '''result -> 1 2 3
                     4 5 6
                     7 8 9'''
        return result

    def __add__(self, other):
        good_sum = []
        line_sum = []
        for x in range(len(self.my_list)):
            for y in range(len(self.my_list[x])):
                line_sum.append(self.my_list[x][y] + other.my_list[x][y])
            good_sum.append(line_sum)
            line_sum = []
        return Matrix('\n'.join(map(str, good_sum)))


m_1 = Matrix([[2, 1, 3], [1, 2, 3], [2, 3, 4], [3, 4, 5]])
print(m_1)
print()

m_2 = Matrix([[2, 0, 1], [1, 0, 2], [0, 2, 1], [2, 1, 0]])
print(m_2)
print()

print(f'Сумма матриц:\n{m_1 + m_2}')
print()
print(m_1)
print()
print(m_2)
